{"version":3,"sources":["../../four_to_line_new/src/serviceWorker.js","../../four_to_line_new/src/components/Players/Players.js","../../four_to_line_new/src/components/Line/Line.js","../../four_to_line_new/src/logics/WhooWin.js","../../four_to_line_new/src/components/Field/Field.js","../../four_to_line_new/src/components/ButtonRestart/ButtonRestart.js","../../four_to_line_new/src/components/HintWin/HintWin.js","../../four_to_line_new/src/App.js","../../four_to_line_new/src/index.js"],"names":["Boolean","window","location","hostname","match","Players","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","react_default","a","createElement","className","concat","users","React","Component","Line","setStatus","index","currentElement","newArrStatus","arrStatus","firstPlayer","size","setState","updatePlayers","active","componentsLineArray","Array","fill","_this2","firstElem","returnArr","onClick","map","elem","key","WhooWin","value","all","forEach","val","some","element","array","Field","returnFieldPlayers","updatePlayersField","componentsArray","getArr","fieldSize","height","width","restarts","rendered","components_Line_Line","ButtonRestart","clickRestart","restartGame","HintWin","restartGameHint","whooWin","text","components_ButtonRestart_ButtonRestart","App","whoo","activeFirstPlayer","restartGameApp","console","log","components_Players_Players","components_Field_Field","components_HintWin_HintWin","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26484aad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './Players.scss';\r\n\r\nclass Players extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: [\"Игрок-1\", \"Игрок-2\"],\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='players'>\r\n        <div className = {`players__player player player-0 player_${this.props.users ? 'active' : 'wait'}`}>{this.state.username[0]}</div>\r\n        <div className = {`players__player player player-1 player_${!this.props.users ? 'active' : 'wait'}`}>{this.state.username[1]}</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Players;\r\n","import React from 'react';\r\nimport './Line.scss';\r\n\r\nclass Line extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    let componentsLineArray = new Array(this.props.size);\r\n    componentsLineArray.fill(0);\r\n    this.state = {\r\n      arrStatus: componentsLineArray,\r\n      currentElement: 0,\r\n      active: 'active'\r\n    }\r\n  }\r\n\r\n  setStatus = () => {\r\n    let index = [this.state.currentElement];\r\n    let newArrStatus = this.state.arrStatus;\r\n    let firstPlayer = this.props.users;\r\n    if(index < this.props.size){\r\n      newArrStatus[index] = firstPlayer ? 'u1' : 'u2';\r\n      index++;\r\n      this.setState({arrStatus: newArrStatus, currentElement: index})\r\n      this.props.updatePlayers(!firstPlayer);\r\n      if(index === this.props.size){\r\n        this.setState({active: 'inactive'})\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    this.firstElem = true;\r\n      this.props.returnArr(this.state.arrStatus, this.props.index);\r\n    return (\r\n      <div className={`line ${this.state.active}`}\r\n        onClick = {this.setStatus}>\r\n        {\r\n          this.state.arrStatus.map((elem, index) => {\r\n            if (this.firstElem) {\r\n              if (elem === 0 ) {\r\n                elem = `active active-${this.props.users ? 'u1' : 'u2'}`;\r\n                this.firstElem = false;\r\n              }\r\n            }\r\n            return(\r\n              <div\r\n                className = {`point point_state-${elem}`}\r\n                key={index}>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Line;\r\n","export default function(value){\n  let all = 0;\n  value.forEach(val => {\n    function filterVal(element, index, array) {\n      return element === 0;\n    }\n    all += val.some(filterVal);\n  })\n  if(all === 0 ){\n    return \"friends\"\n  } else {\n    return \"none\"\n  }\n};","import React from 'react';\r\nimport './Field.scss';\r\nimport Line from '../Line/Line';\r\nimport WhooWin from '../../logics/WhooWin.js';\r\n\r\nclass Field extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      fieldSize: {\r\n        height: 6,\r\n        width: 7,\r\n      },\r\n      restarts: 'true'\r\n    }\r\n    this.componentsArray = new Array(this.state.fieldSize.width);\r\n    this.componentsArray.fill([]);\r\n  }\r\n\r\n  returnFieldPlayers = (value) => {\r\n    this.props.updatePlayersField(value, WhooWin(this.componentsArray));\r\n  }\r\n\r\n  getArr = (value, index) => {\r\n    this.componentsArray[index] = value;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='field' rendered = {this.state.restarts}>\r\n        {this.componentsArray.map( (elem, index) => {\r\n          return (\r\n            <Line\r\n              users = {this.props.users}\r\n              size = {this.state.fieldSize.height}\r\n              updatePlayers = {this.returnFieldPlayers}\r\n              returnArr = {this.getArr}\r\n              index = {index}\r\n              key={index}/>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Field;\r\n","import React from 'react';\nimport './ButtonRestart.scss';\n\nclass ButtonRestart extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {}\n  }\n\n  clickRestart = () => {\n    this.props.restartGame(true);\n  }\n\n  render(){\n    return (\n      <button\n        className='buttonRestart'\n        onClick = {this.clickRestart}>\n        Заново\n      </button>\n    );\n  }\n};\n\nexport default ButtonRestart;\n","import React from 'react';\nimport './HintWin.scss';\nimport ButtonRestart from '../ButtonRestart/ButtonRestart';\n\n\nclass HintWin extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n\n  restartGameHint = (value)=> {\n    this.props.restartGameHint(value);\n  }\n\n  render(){\n    if(this.props.whooWin === 'friends'){\n      this.text = 'Победила ДРУЖБА'\n    }\n    return (\n      <div\n        className={`hintWin hintWin-${this.props.whooWin}`}>\n        {\n          this.text\n        }\n\n        <ButtonRestart\n          restartGame = {this.restartGameHint}/>\n      </div>\n    );\n  }\n};\n\nexport default HintWin;\n","import React from 'react';\nimport './App.css';\nimport Players from './components/Players/Players';\nimport Field from './components/Field/Field';\nimport HintWin from './components/HintWin/HintWin';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      activeFirstPlayer: true,\n      whooWin: 'none',\n    }\n  }\n\n  updatePlayers = (value, whoo) => {\n    this.setState({activeFirstPlayer: value, whooWin: whoo});\n  }\n\n  restartGameApp = (value) => {\n    console.log('Здесь должна быть перезагрузка :-(')\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Players users = {this.state.activeFirstPlayer}/>\n        <Field\n          users = {this.state.activeFirstPlayer}\n          updatePlayersField = {this.updatePlayers}/>\n        <HintWin whooWin={this.state.whooWin} restartGameHint = {this.restartGameApp}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}